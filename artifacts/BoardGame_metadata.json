{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "subscriptionId",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "vrfCoordinator",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "keyHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint32",
						"name": "callbackGasLimit",
						"type": "uint32"
					},
					{
						"internalType": "uint16",
						"name": "requestConfirmations",
						"type": "uint16"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "have",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "want",
						"type": "address"
					}
				],
				"name": "OnlyCoordinatorCanFulfill",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "newFieldPosition",
						"type": "uint32"
					}
				],
				"name": "Moved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "NewPlayer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "NewTurn",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getAllPlayers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint32",
								"name": "fieldPosition",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "happiness",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "speed",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "wealth",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "isYourTurnInProgress",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							}
						],
						"internalType": "struct BoardGame.Profile[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "fieldPosition",
						"type": "uint32"
					}
				],
				"name": "getReward",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "happiness",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "speed",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "wealth",
						"type": "uint32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "getScore",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "happiness",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "speed",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "wealth",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "fieldPosition",
						"type": "uint32"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "rawFulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "register",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "roleDice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"BoardGame.sol": "BoardGame"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
			"keccak256": "0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904",
			"license": "MIT",
			"urls": [
				"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360",
				"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
			"keccak256": "0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494",
			"license": "MIT",
			"urls": [
				"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153",
				"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk"
			]
		},
		"BoardGame.sol": {
			"keccak256": "0x97370899ca03d2a416b0b93cc1ff31f82a5faa5275977ee80e56b827f0bdb0cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://95cd797b6335390248e5479f59420443f2108daee0aa3054e2f78d705fe6ec65",
				"dweb:/ipfs/QmQJUPUTvhH1pKMX8dQGy3MpZKXFM8Jp4o21oqKNq1mGjD"
			]
		}
	},
	"version": 1
}